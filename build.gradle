apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

group = "de.martido"
version = "0.2-SNAPSHOT"

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  mavenCentral()
}

dependencies {
  compile(group: 'org.apache.ant', name: 'ant', version: '1.8.2') {
    exclude(group: 'org.apache.ant', module: 'ant-launcher')
  }
  compile(group: 'com.sun.codemodel', name: 'codemodel', version: '2.4')
  compile(group: 'org.antlr', name: 'stringtemplate', version: '3.2.1')
  compile(group: 'org.apache.velocity', name: 'velocity', version: '1.7') {
    exclude(group: 'oro', module: 'oro')
  }
  testCompile(group: 'junit', name: 'junit', version: '4.8.2')
}

task createWrapper(type: Wrapper) {
  gradleVersion = "1.4"
}

task testPrepare {
  doLast {
    def dir = new File("src/test/generated")
    if(!dir.exists()) {
      dir.mkdirs()
    } else {
      dir.eachDir { delete(it) }
    }
  }
}

task sourcesJar(type: Jar, dependsOn:classes) { 
  description = "Creates a JAR containing all main sources."
  classifier = 'sources' 
  from sourceSets.main.allSource 
}

// Add the sources JAR artifact to the archives configuration.
artifacts {
  archives sourcesJar
}

// Configure the Maven 'install' task
// Don't add the 'compile' configuration to the generated POM (see Gradle docs) 
install {
  repositories {
    mavenInstaller {
      pom.scopeMappings.mappings.remove(configurations.compile)
    }
  }
}

eclipseClasspath.dependsOn cleanEclipseClasspath
test.dependsOn testPrepare
install.dependsOn sourcesJar
